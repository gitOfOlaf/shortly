function t(t,e,r){if(!e.has(t))throw new TypeError("attempted to "+r+" private field on non-instance");return e.get(t)}function e(t,e){return e.get?e.get.call(t):e.value}function r(r,n){return e(r,t(r,n,"get"))}function n(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function i(t,e,r){n(t,e),e.set(t,r)}function o(t,e){if(e.set){if(!e.get)throw new TypeError("attempted to read set only private field");return"__destrWrapper"in e||(e.__destrWrapper={set value(r){e.set.call(t,r)},get value(){return e.get.call(t)}}),e.__destrWrapper}if(!e.writable)throw new TypeError("attempted to set read only private field");return e}function s(e,r){return o(e,t(e,r,"update"))}var l=new WeakMap,a=new WeakMap;new class{_toggleMenuBar(){this.burger.classList.toggle("toggle"),this.mobileMenu.classList.toggle("translate-x-[120%]")}_inputValidator(){return this.validDomainTest.test(this.input.value)}_throwError(){this.input.style.borderColor="hsl(0, 87%, 67%)",this.input.style.borderWidth="2px",this.input.style.color="hsl(0, 87%, 67%)",this.errorMsg.classList.remove("hidden"),setTimeout((()=>{this.input.style.borderColor="transparent",this.input.style.borderWidth="0px",this.input.style.color="black",this.errorMsg.classList.add("hidden")}),5e3)}async _fetchRequest(t){try{const e=await fetch(`https://api.shrtco.de/v2/shorten?url=${t}`),n=await e.json();if(!e.ok)throw new Error("something went wrong, make sure your search query is inputted correctly!");const i=n.result.original_link,o=n.result.full_short_link;s(this,a).value++;let u={id:r(this,a),short_URL:o,long_URL:i};r(this,l).push(u),localStorage.setItem("URLs",JSON.stringify(r(this,l))),this._renderGeneratedLink()}catch(t){console.log(`Something went wrong, make sure you're connected to the internet ${t.message}`)}}_renderGeneratedLink(){let t="";r(this,l)&&(r(this,l).forEach((e=>{t+=`\n        <div class="link items-center justify-between p-5 lg:flex" draggable="true">\n            <p class="text-sm lg:text-base">\n              <a href="${e.long_URL}" target=_"blank">${e.long_URL}</a>\n            </p>\n             <div class="link--section--copy mt-2 flex flex-col border-t border-grayishViolet lg:mt-0 lg:flex-row lg:items-center lg:border-none">\n              <p class="cursor-pointer py-2 text-xs text-cyan hover:underline lg:py-0 lg:pr-2 lg:text-sm">\n               <a href="${e.short_URL}" target=_"blank">${e.short_URL}</a>\n              </p>\n                <button class="copy w-full rounded bg-cyan px-5 py-2 text-sm text-white lg:w-auto">Copy</button>\n            </div>\n      </div>`})),this.generatedLinksContainer.innerHTML=t)}_copyToClipboard(t){const e=t.target.closest(".copy");if(!e)return;const r=e.previousElementSibling.textContent.trim();navigator.clipboard.writeText(r).then((()=>{e.textContent="Copied!",e.style.backgroundColor="hsl(257, 27%, 26%)",setTimeout((()=>{e.textContent="Copy",e.style.backgroundColor="hsl(180 66% 49% / var(--tw-bg-opacity))"}),1e3)})).catch((t=>{console.error(`Error copying text: ${t}`)}))}_submitForm(t){t.preventDefault(),this._inputValidator()?(this._fetchRequest(this.input.value),this.input.value=""):this._throwError()}constructor(){i(this,l,{writable:!0,value:JSON.parse(localStorage.getItem("URLs"))||[]}),i(this,a,{writable:!0,value:0}),this.burger=document.querySelector(".burger"),this.form=document.querySelector("form"),this.mobileMenu=document.querySelector(".mobile-menu"),this.input=document.querySelector("input"),this.errorMsg=document.querySelector(".errorMsg"),this.generatedLinksContainer=document.querySelector(".generated--links"),this.mainContainer=document.querySelector(".links--generator"),this.validDomainTest=/^(?:(?:https?|ftp):\/\/)?(?:www\.)?[a-z0-9-]+(?:\.[a-z]+){1,}(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,this.burger.addEventListener("click",this._toggleMenuBar.bind(this)),this.form.addEventListener("submit",this._submitForm.bind(this)),this.mainContainer.addEventListener("click",this._copyToClipboard.bind(this)),this._renderGeneratedLink()}};
//# sourceMappingURL=index.1f0d7721.js.map
